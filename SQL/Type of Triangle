Type of Triangle

Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:
Equilateral: It's a triangle with 3 sides of equal length.
Isosceles: It's a triangle with 2 sides of equal length.
Scalene: It's a triangle with 3 sides of differing lengths.
Not A Triangle: The given values of A, B, and C don't form a triangle.

The TRIANGLES table is described as follows:
+---------+---------+
|Column   |Type     |
+---------+---------+
|A        |Integer  |
+---------+---------+
|B        |Integer  |
+---------+---------+
|C        |Integer  |
+---------+---------+
Each row in the table denotes the lengths of each of a triangle's three sides.

Sample Input:
+---------+---------+---------+
|A        |B        |C        |
+---------+---------+---------+
|20       |20       |23       |
+---------+---------+---------+
|20       |20       |20       |
+---------+---------+---------+
|20       |21       |22       |
+---------+---------+---------+

Sample Output:
Isosceles
Equilateral
Scalene

Explanation:
Values in the tuple (20,20,23) form an Isosceles triangle, because 20=20.
Values in the tuple (20,20,20) form an Equilateral triangle, because A=B=C. 
Values in the tuple (13,14,30) form a Scalene triangle, because A!=B!=C

SELECT CASE             
            WHEN A + B > C AND B + C > A AND A + C > B THEN
                CASE 
                    WHEN A = B AND B = C THEN 'Equilateral'
                    WHEN A = B OR B = C OR A = C THEN 'Isosceles'
                    ELSE 'Scalene'
                END
            ELSE 'Not A Triangle'
        END
FROM TRIANGLES;
-- when相当于if，同级别可以多个when
-- 使用when之前前后必须有case + end

